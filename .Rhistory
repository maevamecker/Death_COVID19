names(Corona_V)[names(Corona_V) == "variable"] <- "Date"
names(Corona_V)[names(Corona_V) == "value"] <- "Dead"
#Redefined the dates type
Corona_V$Date<-as.Date(Corona_V$Date, format = "%m/%d/%y")
View(Corona_V)
EU27line<-cbind(Province_Region=NA ,Country_Name='EU27',Lat=NA, Long=NA, t(colSums(EU27DT[,!1:4])))
coronaD2<-rbind(CoronaD,EU27line, use.names=FALSE)
coronaD2[267,]
head(EU27DT[,1:7])
EU27 = c("Austria", "Belgium", "Bulgaria", "Croatia",
"Cyprus", "Czech Republic", "Denmark",
"Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania",
"Luxembourg", "Malta", "Netherlands", "Poland", "Portugal",
"Romania", "Slovakia", "Slovenia", "Spain", "Sweden")
EU27DT = CoronaD[Country_Region %in% EU27 & Province_State==""]
head(EU27DT[,1:7])
EU27line<-cbind(Province_Region=NA ,Country_Name='EU27',Lat=NA, Long=NA, t(colSums(EU27DT[,!1:4])))
coronaD2<-rbind(CoronaD,EU27line, use.names=FALSE)
coronaD2[267,]
View(CoronaD2)
#Keep the columns with the date's information
Dates<-colnames(CoronaD2[,5:255])
#Create a new Data Base with the vertical storage of the dates and the deaths
Corona_V = melt(CoronaD2, id.vars = 1:4,
measure.vars = Dates)
#Change the names to have a simpler information of what the columns contain
names(Corona_V)[names(Corona_V) == "variable"] <- "Date"
names(Corona_V)[names(Corona_V) == "value"] <- "Dead"
#Transform this new data set into a data.table to easier manupulate
setDT(Corona_V)
#Redefined the dates type
Corona_V$Date<-as.Date(Corona_V$Date, format = "%m/%d/%y")
View(Corona_V)
version
EU27 = c("Austria", "Belgium", "Bulgaria", "Croatia",
"Cyprus", "Czech Republic", "Denmark",
"Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania",
"Luxembourg", "Malta", "Netherlands", "Poland", "Portugal",
"Romania", "Slovakia", "Slovenia", "Spain", "Sweden")
EU27DT = CoronaD[Country_Region %in% EU27 & Province_State==""]
library(data.table)
library(readr)
library(magrittr)
library(ggplot2)
library(reshape2)
library(dplyr)
#-------------------------------------------------------------------------------
#STEP 1 : DATA SET POPULATION
#We import, check and clean data set population
World_Pop <-read_csv("worldPop.csv") #Import dataset and header
class(World_Pop) #Check the class
setDT(World_Pop) #Transform into a data.table
class(World_Pop) # Check the class again
colnames(World_Pop) #Check the names of the columns
#Clearler indentificatoin of the columns
names(World_Pop)[names(World_Pop) == "Country.Name."] <- "Country Name"
names(World_Pop)[names(World_Pop) == "2018"] <- "Population 2018"
str(World_Pop) #check the type of the variables
#------------------------------------------------------------------------------
#STEP 2 : DATA SET COVID
#Import and check Data Set Covid
#Import Data set
CoronaD <-read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
setDT(CoronaD) #Transform the data frame into data.table
#Change the column names so we dont have probles with / sign
colnames(CoronaD)
names(CoronaD)[names(CoronaD) =="Country/Region"] <- "Country_Region"
names(CoronaD)[names(CoronaD) =="Province/State"] <- "Province_State"
#Add a row for EU27
EU27 = c("Austria", "Belgium", "Bulgaria", "Croatia",
"Cyprus", "Czech Republic", "Denmark",
"Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania",
"Luxembourg", "Malta", "Netherlands", "Poland", "Portugal",
"Romania", "Slovakia", "Slovenia", "Spain", "Sweden")
EU27DT = CoronaD[Country_Region %in% EU27 & Province_State==""]
head(EU27DT[,1:7])
View(EU27DT)
View(EU27DT)
View(EU27DT)
EU27DT = CoronaD[`Country_Region` %in% EU27][is.na(`Province_State`)]
View(EU27DT)
head(EU27DT[,1:7])
EU27line<-cbind(Province_Region=NA ,Country_Name='EU27',Lat=NA, Long=NA, t(colSums(EU27DT[,!1:4])))
coronaD2<-rbind(CoronaD,EU27line, use.names=FALSE)
View(CoronaD2)
coronaD2[267,]
View(CoronaD2)
EU27DT = CoronaD[`Country_Region` %in% EU27][is.na(`Province_State`)]
head(EU27DT[,1:7])
EU27line<-cbind(Province_Region=NA ,Country_Name='EU27',Lat=NA, Long=NA, t(colSums(EU27DT[,!1:4])))
coronaD2<-rbind(CoronaD,EU27line, use.names=FALSE)
coronaD2[267,]
View(CoronaD2)
library(data.table)
library(readr)
library(magrittr)
library(ggplot2)
library(reshape2)
library(dplyr)
#-------------------------------------------------------------------------------
#STEP 1 : DATA SET POPULATION
#We import, check and clean data set population
World_Pop <-read_csv("worldPop.csv") #Import dataset and header
class(World_Pop) #Check the class
setDT(World_Pop) #Transform into a data.table
class(World_Pop) # Check the class again
colnames(World_Pop) #Check the names of the columns
#Clearler indentificatoin of the columns
names(World_Pop)[names(World_Pop) == "Country.Name."] <- "Country Name"
names(World_Pop)[names(World_Pop) == "2018"] <- "Population 2018"
str(World_Pop) #check the type of the variables
#------------------------------------------------------------------------------
#STEP 2 : DATA SET COVID
#Import and check Data Set Covid
#Import Data set
CoronaD <-read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
setDT(CoronaD) #Transform the data frame into data.table
#Change the column names so we dont have probles with / sign
colnames(CoronaD)
names(CoronaD)[names(CoronaD) =="Country/Region"] <- "Country_Region"
names(CoronaD)[names(CoronaD) =="Province/State"] <- "Province_State"
#Add a row for EU27
EU27 = c("Austria", "Belgium", "Bulgaria", "Croatia",
"Cyprus", "Czech Republic", "Denmark",
"Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania",
"Luxembourg", "Malta", "Netherlands", "Poland", "Portugal",
"Romania", "Slovakia", "Slovenia", "Spain", "Sweden")
EU27DT = CoronaD[`Country_Region` %in% EU27][is.na(`Province_State`)]
View(EU27DT)
EU27line<-cbind(Province_Region=NA ,Country_Name='EU27',Lat=NA, Long=NA, t(colSums(EU27DT[,!1:4])))
View(EU27line)
coronaD2<-rbind(CoronaD,EU27line, use.names=FALSE)
CoronaD2<-rbind(CoronaD,EU27line, use.names=FALSE)
CoronaD2[267,]
View(CoronaD2)
View(CoronaD2)
#Keep the columns with the date's information
Dates<-colnames(CoronaD2[,5:255])
#Create a new Data Base with the vertical storage of the dates and the deaths
Corona_V = melt(CoronaD2, id.vars = 1:4,
measure.vars = Dates)
#Change the names to have a simpler information of what the columns contain
names(Corona_V)[names(Corona_V) == "variable"] <- "Date"
names(Corona_V)[names(Corona_V) == "value"] <- "Dead"
#Transform this new data set into a data.table to easier manupulate
setDT(Corona_V)
#Redefined the dates type
Corona_V$Date<-as.Date(Corona_V$Date, format = "%m/%d/%y")
View(Corona_V)
Lockdown1<-read_csv('CoronaLockdown.csv')
#Cleaning of this data base
head(Lockdown1)
Lockdown1[is.na(Lockdown1)] = ""
Lockdown1<-Lockdown1[Lockdown1$Place == "" , c(2,4,5)]
#Set to a data.table
setDT(Lockdown1)
str(Lockdown1)
#Redefined the dates type
Lockdown1$Start.date<-as.Date(Lockdown1$Start.date, "%d/%m/%y")
Lockdown1$End.date<-as.Date(Lockdown1$End.date, "%d/%m/%y")
#Import DataBase 2 that contains other countries lockdown dates
Lockdown2<-read.csv('CoronaLockdown2.csv')
#Set to a data.table
setDT(Lockdown2)
Lockdown2<-Lockdown2[, c(1,2,3)]
names(Lockdown2)[names(Lockdown2) == "Start"] <- "Start.date"
names(Lockdown2)[names(Lockdown2) == "End"] <- "End.date"
str(Lockdown2)
#Redefined the dates type
Lockdown2$Start.date<-as.Date(Lockdown2$Start.date, "%d/%m/%y")
Lockdown2$End.date<-as.Date(Lockdown2$End.date, "%d/%m/%y")
str(Lockdown2)
#Combination of two Lockdown data sets
LOCKDOWN<-rbind(Lockdown1, Lockdown2)
View(LOCKDOWN)
Inner<-merge(Corona_V, World_Pop, by.x="Country_Region", by.y="Country Name", all.x = TRUE)
View(Inner)
CORONAVIRUS<-merge(Inner, LOCKDOWN, by.x="Country_Region", by.y="Country", all.x=TRUE)
CORONAVIRUS<-merge(Inner, LOCKDOWN, by.x="Country_Region", by.y="Country", all=TRUE)
Inner<-merge(Corona_V, World_Pop, by.x="Country_Region", by.y="Country Name", all= TRUE)
Inner<-merge(Corona_V, World_Pop, by.x="Country_Region", by.y="Country Name", all= FALSE)
View(Inner)
View(Corona_V)
View(Inner)
Inner2 <- rbind(Inner, Corona_V[Country_Region == "EU27",])
EU27DT = CoronaD[`Country_Region` %in% EU27][is.na(`Province_State`)]
head(EU27DT[,1:7])
EU27line<-cbind(Province_Region=NA ,Country_Name='EU27',Lat=NA, Long=NA, t(colSums(EU27DT[,!1:4])))
CoronaD2<-rbind(CoronaD,EU27line, use.names=FALSE)
View(CoronaD2)
EU27DT = LOCKDOWN[`Country_Region` %in% EU27][is.na(`Province_State`)]
View(LOCKDOWN)
EU27DT = LOCKDOWN[`Country` %in% EU27]
head(EU27DT[,1:7])
head(EU27DT[,1:3])
LOCKDOWNFINAL<-rbind(LOCKDOWN,EU27line, use.names=FALSE)
LOCKDOWNFINAL<-rbind(LOCKDOWN,EU27line, use.names=FALSE , fill = TRUE)
View(LOCKDOWNFINAL)
LOCKDOWNFINAL<-rbind(LOCKDOWN,Corona_V [Country_Region == "EU27",], use.names=FALSE)
LOCKDOWNFINAL<-rbind(LOCKDOWN,Corona_V [Country_Region == "EU27",], use.names=FALSE, fill = TRUE)
View(LOCKDOWNFINAL)
View(LOCKDOWN)
View(LOCKDOWN)
World_Pop <-read_csv("worldPop.csv") #Import dataset and header
class(World_Pop) #Check the class
setDT(World_Pop) #Transform into a data.table
class(World_Pop) # Check the class again
colnames(World_Pop) #Check the names of the columns
#Clearler indentificatoin of the columns
names(World_Pop)[names(World_Pop) == "Country.Name."] <- "Country Name"
names(World_Pop)[names(World_Pop) == "2018"] <- "Population 2018"
View(World_Pop)
View(World_Pop)
EU27DT = World_Pop[`Country Name` %in% EU27]
EU27 = c("Austria", "Belgium", "Bulgaria", "Croatia",
"Cyprus", "Czech Republic", "Denmark",
"Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania",
"Luxembourg", "Malta", "Netherlands", "Poland", "Portugal",
"Romania", "Slovakia", "Slovenia", "Spain", "Sweden")
EU27DT = World_Pop[`Country Name` %in% EU27]
View(World_Pop)
head(EU27DT[,1:2])
colSums(EU27DT[,!(1:2)])
head(EU27DT[,1:2])
colSums(EU27DT[,!(1)])
t(colSums(EU27DT[,!(1)]))
cbind(data.table(A='EU total'), t(colSums(EU27DT[,!(1)])))
Word_Pop2<-rbind(Word_Pop,sumEU, use.names=FALSE)
World_Pop2<-rbind(World_Pop,sumEU, use.names=FALSE)
sumEU = cbind(data.table(A='EU total'), t(colSums(EU27DT[,!(1)])))
World_Pop2<-rbind(World_Pop,sumEU, use.names=FALSE)
View(World_Pop2)
EU27DT = LOCKDOWN[`Country` %in% EU27]
#
#
#Packages and libraries
library(data.table)
library(readr)
library(magrittr)
library(ggplot2)
library(reshape2)
library(dplyr)
#-------------------------------------------------------------------------------
#STEP 1 : DATA SET POPULATION
#We import, check and clean data set population
World_Pop <-read_csv("worldPop.csv") #Import dataset and header
class(World_Pop) #Check the class
setDT(World_Pop) #Transform into a data.table
class(World_Pop) # Check the class again
colnames(World_Pop) #Check the names of the columns
#Clearler indentificatoin of the columns
names(World_Pop)[names(World_Pop) == "Country.Name."] <- "Country Name"
names(World_Pop)[names(World_Pop) == "2018"] <- "Population 2018"
str(World_Pop) #check the type of the variables
#We add a row for EU27
EU27 = c("Austria", "Belgium", "Bulgaria", "Croatia",
"Cyprus", "Czech Republic", "Denmark",
"Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania",
"Luxembourg", "Malta", "Netherlands", "Poland", "Portugal",
"Romania", "Slovakia", "Slovenia", "Spain", "Sweden")
EU27DT = World_Pop[`Country Name` %in% EU27]
head(EU27DT[,1:2])
colSums(EU27DT[,!(1)])
t(colSums(EU27DT[,!(1)]))
sumEU = cbind(data.table(A='EU total'), t(colSums(EU27DT[,!(1)])))
World_Pop2<-rbind(World_Pop,sumEU, use.names=FALSE)
#------------------------------------------------------------------------------
#STEP 2 : DATA SET COVID
#Import and check Data Set Covid
#Import Data set
CoronaD <-read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
setDT(CoronaD) #Transform the data frame into data.table
#Change the column names so we dont have probles with / sign
colnames(CoronaD)
names(CoronaD)[names(CoronaD) =="Country/Region"] <- "Country_Region"
names(CoronaD)[names(CoronaD) =="Province/State"] <- "Province_State"
#Add a row for EU27
EU27 = c("Austria", "Belgium", "Bulgaria", "Croatia",
"Cyprus", "Czech Republic", "Denmark",
"Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania",
"Luxembourg", "Malta", "Netherlands", "Poland", "Portugal",
"Romania", "Slovakia", "Slovenia", "Spain", "Sweden")
EU27DT = CoronaD[`Country_Region` %in% EU27][is.na(`Province_State`)]
head(EU27DT[,1:7])
EU27line<-cbind(Province_Region=NA ,Country_Name='EU27',Lat=NA, Long=NA, t(colSums(EU27DT[,!1:4])))
CoronaD2<-rbind(CoronaD,EU27line, use.names=FALSE)
View(CoronaD2)
#Keep the columns with the date's information
Dates<-colnames(CoronaD2[,5:255])
#Create a new Data Base with the vertical storage of the dates and the deaths
Corona_V = melt(CoronaD2, id.vars = 1:4,
measure.vars = Dates)
#Change the names to have a simpler information of what the columns contain
names(Corona_V)[names(Corona_V) == "variable"] <- "Date"
names(Corona_V)[names(Corona_V) == "value"] <- "Dead"
#Transform this new data set into a data.table to easier manupulate
setDT(Corona_V)
#Redefined the dates type
Corona_V$Date<-as.Date(Corona_V$Date, format = "%m/%d/%y")
View(Corona_V)
#-------------------------------------------------------------------------------------------
#STEP 3: In order to plot the lockdown dates for each country we add new data bases
#Import Data Base 1 that contains some of the countries lockdown dates
Lockdown1<-read_csv('CoronaLockdown.csv')
#Cleaning of this data base
head(Lockdown1)
Lockdown1[is.na(Lockdown1)] = ""
Lockdown1<-Lockdown1[Lockdown1$Place == "" , c(2,4,5)]
#Set to a data.table
setDT(Lockdown1)
str(Lockdown1)
#Redefined the dates type
Lockdown1$Start.date<-as.Date(Lockdown1$Start.date, "%d/%m/%y")
Lockdown1$End.date<-as.Date(Lockdown1$End.date, "%d/%m/%y")
#Import DataBase 2 that contains other countries lockdown dates
Lockdown2<-read.csv('CoronaLockdown2.csv')
#Set to a data.table
setDT(Lockdown2)
Lockdown2<-Lockdown2[, c(1,2,3)]
names(Lockdown2)[names(Lockdown2) == "Start"] <- "Start.date"
names(Lockdown2)[names(Lockdown2) == "End"] <- "End.date"
str(Lockdown2)
#Redefined the dates type
Lockdown2$Start.date<-as.Date(Lockdown2$Start.date, "%d/%m/%y")
Lockdown2$End.date<-as.Date(Lockdown2$End.date, "%d/%m/%y")
str(Lockdown2)
#Combination of two Lockdown data sets
LOCKDOWN<-rbind(Lockdown1, Lockdown2)
View(LOCKDOWN)
EU27DT = LOCKDOWN[`Country` %in% EU27]
head(EU27DT[,1:2])
LOCKDOWNFINAL<-rbind(LOCKDOWN,EU27DT, use.names=FALSE)
View(LOCKDOWNFINAL)
LOCKDOWNEU <- c(Country == "EU27", Start.date = "", End.date = "")
LOCKDOWNEU <- c(LOCKDOWN$Country == "EU27", LOCKDOWN$Start.date = "", LOCKDOWN$End.date = "")
LOCKDOWNEU <- c(LOCKDOWN$Country = "EU27", LOCKDOWN$Start.date = "", LOCKDOWN$End.date = "")
LOCKDOWNEU <- c(LOCKDOWN$Country = "EU27", LOCKDOWN$Start.date = "", LOCKDOWN$End.date = "")
LOCKDOWNEU <- [LOCKDOWN$Country = "EU27", LOCKDOWN$Start.date = "", LOCKDOWN$End.date = ""]
LOCKDOWNEU <- [Country = "EU27", Start.date = "", End.date = ""]
LOCKDOWNEU <- as.data.frame(Country = "EU27", Start.date = "", End.date = "")
LOCKDOWNEU <- list(Country = "EU27", Start.date = "", End.date = "")
LOCKDOWNFINAL<-rbind(LOCKDOWN,LOCKDOWNEU, use.names=FALSE)
View(LOCKDOWNEU)
LOCKDOWNEU <- read.table(Country = "EU27", Start.date = "", End.date = "")
EU.df = read.table(header=TRUE,text ='
Country Start.date End.date
EU27   NA    NA')
EU.df
LOCKDOWNFINAL<-rbind(LOCKDOWN,EU.df, use.names=FALSE)
EU.df
str(EU.df)
setDT(EU.df)
LOCKDOWNFINAL<-rbind(LOCKDOWN,EU.df, use.names=FALSE)
LOCKDOWN$Country = "EU27"
View(LOCKDOWN)
View(LOCKDOWN)
#
#
#Packages and libraries
library(data.table)
library(readr)
library(magrittr)
library(ggplot2)
library(reshape2)
library(dplyr)
#-------------------------------------------------------------------------------
#STEP 1 : DATA SET POPULATION
#We import, check and clean data set population
World_Pop <-read_csv("worldPop.csv") #Import dataset and header
class(World_Pop) #Check the class
setDT(World_Pop) #Transform into a data.table
class(World_Pop) # Check the class again
colnames(World_Pop) #Check the names of the columns
#Clearler indentificatoin of the columns
names(World_Pop)[names(World_Pop) == "Country.Name."] <- "Country Name"
names(World_Pop)[names(World_Pop) == "2018"] <- "Population 2018"
str(World_Pop) #check the type of the variables
#We add a row for EU27
EU27 = c("Austria", "Belgium", "Bulgaria", "Croatia",
"Cyprus", "Czech Republic", "Denmark",
"Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania",
"Luxembourg", "Malta", "Netherlands", "Poland", "Portugal",
"Romania", "Slovakia", "Slovenia", "Spain", "Sweden")
EU27DT = World_Pop[`Country Name` %in% EU27]
head(EU27DT[,1:2])
colSums(EU27DT[,!(1)])
t(colSums(EU27DT[,!(1)]))
sumEU = cbind(data.table(A='EU total'), t(colSums(EU27DT[,!(1)])))
World_Pop2<-rbind(World_Pop,sumEU, use.names=FALSE)
#------------------------------------------------------------------------------
#STEP 2 : DATA SET COVID
#Import and check Data Set Covid
#Import Data set
CoronaD <-read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
setDT(CoronaD) #Transform the data frame into data.table
#Change the column names so we dont have probles with / sign
colnames(CoronaD)
names(CoronaD)[names(CoronaD) =="Country/Region"] <- "Country_Region"
names(CoronaD)[names(CoronaD) =="Province/State"] <- "Province_State"
#Add a row for EU27
EU27DT = CoronaD[`Country_Region` %in% EU27][is.na(`Province_State`)]
head(EU27DT[,1:7])
EU27line<-cbind(Province_Region=NA ,Country_Name='EU27',Lat=NA, Long=NA, t(colSums(EU27DT[,!1:4])))
CoronaD2<-rbind(CoronaD,EU27line, use.names=FALSE)
View(CoronaD2)
#Keep the columns with the date's information
Dates<-colnames(CoronaD2[,5:255])
#Create a new Data Base with the vertical storage of the dates and the deaths
Corona_V = melt(CoronaD2, id.vars = 1:4,
measure.vars = Dates)
#Change the names to have a simpler information of what the columns contain
names(Corona_V)[names(Corona_V) == "variable"] <- "Date"
names(Corona_V)[names(Corona_V) == "value"] <- "Dead"
#Transform this new data set into a data.table to easier manupulate
setDT(Corona_V)
#Redefined the dates type
Corona_V$Date<-as.Date(Corona_V$Date, format = "%m/%d/%y")
View(Corona_V)
#-------------------------------------------------------------------------------------------
#STEP 3: In order to plot the lockdown dates for each country we add new data bases
#Import Data Base 1 that contains some of the countries lockdown dates
Lockdown1<-read_csv('CoronaLockdown.csv')
#Cleaning of this data base
head(Lockdown1)
Lockdown1[is.na(Lockdown1)] = ""
Lockdown1<-Lockdown1[Lockdown1$Place == "" , c(2,4,5)]
#Set to a data.table
setDT(Lockdown1)
str(Lockdown1)
#Redefined the dates type
Lockdown1$Start.date<-as.Date(Lockdown1$Start.date, "%d/%m/%y")
Lockdown1$End.date<-as.Date(Lockdown1$End.date, "%d/%m/%y")
#Import DataBase 2 that contains other countries lockdown dates
Lockdown2<-read.csv('CoronaLockdown2.csv')
#Set to a data.table
setDT(Lockdown2)
Lockdown2<-Lockdown2[, c(1,2,3)]
names(Lockdown2)[names(Lockdown2) == "Start"] <- "Start.date"
names(Lockdown2)[names(Lockdown2) == "End"] <- "End.date"
str(Lockdown2)
#Redefined the dates type
Lockdown2$Start.date<-as.Date(Lockdown2$Start.date, "%d/%m/%y")
Lockdown2$End.date<-as.Date(Lockdown2$End.date, "%d/%m/%y")
str(Lockdown2)
#Combination of two Lockdown data sets
LOCKDOWN<-rbind(Lockdown1, Lockdown2)
View(LOCKDOWN)
EU.df = data.frame(Country = "EU27", Start.date = NA , End.date = NA)
EU.df
LOCKDOWNFINAL<-rbind(LOCKDOWN,EU.df, use.names=FALSE)
View(LOCKDOWN)
EU.df = data.frame(Country = "EU27", Start.date = "", End.date = "" )
LOCKDOWNFINAL<-rbind(LOCKDOWN,EU.df, use.names=FALSE)
View(LOCKDOWNFINAL)
Inner<-merge(Corona_V, World_Pop, by.x="Country_Region", by.y="Country Name", all= FALSE)
View(Inner)
Inner<-merge(Corona_V, World_Pop, by.x="Country_Region", by.y="Country Name", all= FALSE)
View(Inner)
Inner<-merge(Corona_V, World_Pop2, by.x="Country_Region", by.y="Country Name", all= FALSE)
View(Inner)
View(World_Pop2)
EU27DT = World_Pop[`Country Name` %in% EU27]
head(EU27DT[,1:2])
colSums(EU27DT[,!(1)])
t(colSums(EU27DT[,!(1)]))
sumEU = cbind(data.table(A='EU27'), t(colSums(EU27DT[,!(1)])))
World_Pop2<-rbind(World_Pop,sumEU, use.names=FALSE)
View(World_Pop2)
View(Corona_V)
Inner<-merge(Corona_V, World_Pop2, by.x="Country_Region", by.y="Country Name", all= FALSE)
View(Inner)
CORONAVIRUS<-merge(Inner, LOCKDOWN, by.x="Country_Region", by.y="Country", all=FALSE)
View(CORONAVIRUS)
View(LOCKDOWN)
LOCKDOWN<-rbind(LOCKDOWN,EU.df, use.names=FALSE)
View(LOCKDOWN)
CORONAVIRUS<-merge(Inner, LOCKDOWN, by.x="Country_Region", by.y="Country", all=FALSE)
View(CORONAVIRUS)
#We add a new column to this data with a calculated variable = Dead_per_capita in %
CORONAVIRUS$Dead_per_capita_Permillion<-((CORONAVIRUS$Dead)/(CORONAVIRUS$`Population 2018`))*1000000
class(CORONAVIRUS)#Check the class
class(CORONAVIRUS)#Check the class
str(CORONAVIRUS)
CORONAVIRUS$Dead <- as.numeric(CORONAVIRUS$Dead)
str(CORONAVIRUS)
#We add a new column to this data with a calculated variable = Dead_per_capita in %
CORONAVIRUS$Dead_per_capita_Permillion<-((CORONAVIRUS$Dead)/(CORONAVIRUS$`Population 2018`))*1000000
#------
#Check
View(CORONAVIRUS)
library(shiny); runApp('Script app.R')
runApp('Script app.R')
runApp('Script app.R')
runApp('Script app.R')
runApp('Script app.R')
runApp('Script app.R')
library(shiny); runApp('Script app.R')
library(shiny); runApp('Script app.R')
colnames(World_Pop) #Check the names of the columns
colnames(CoronaD)
str(Lockdown1)
runApp('Script app.R')
library(shiny); runApp('Script app.R')
runApp('Script app.R')
